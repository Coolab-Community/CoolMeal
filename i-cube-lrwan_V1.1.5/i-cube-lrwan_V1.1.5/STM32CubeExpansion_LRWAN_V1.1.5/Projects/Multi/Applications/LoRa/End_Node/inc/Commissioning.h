/*!
 * \file      Commissioning.h
 *
 * \brief     End device commissioning parameters
 *
 * \copyright Revised BSD License, see section \ref LICENSE.
 *
 * \code
 *                ______                              _
 *               / _____)             _              | |
 *              ( (____  _____ ____ _| |_ _____  ____| |__
 *               \____ \| ___ |    (_   _) ___ |/ ___)  _ \
 *               _____) ) ____| | | || |_| ____( (___| | | |
 *              (______/|_____)_|_|_| \__)_____)\____)_| |_|
 *              (C)2013-2017 Semtech
 *
 * \endcode
 *
 * \author    Miguel Luis ( Semtech )
 *
 * \author    Gregory Cristian ( Semtech )
*/
 /******************************************************************************
  * @file    commissioning.h
  * @author  MCD Application Team
  * @version V1.1.5
  * @date    30-March-2018
  * @brief   End device commissioning parameters
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics International N.V. 
  * All rights reserved.</center></h2>
  *
  * Redistribution and use in source and binary forms, with or without 
  * modification, are permitted, provided that the following conditions are met:
  *
  * 1. Redistribution of source code must retain the above copyright notice, 
  *    this list of conditions and the following disclaimer.
  * 2. Redistributions in binary form must reproduce the above copyright notice,
  *    this list of conditions and the following disclaimer in the documentation
  *    and/or other materials provided with the distribution.
  * 3. Neither the name of STMicroelectronics nor the names of other 
  *    contributors to this software may be used to endorse or promote products 
  *    derived from this software without specific written permission.
  * 4. This software, including modifications and/or derivative works of this 
  *    software, must execute solely and exclusively on microcontroller or
  *    microprocessor devices manufactured by or for STMicroelectronics.
  * 5. Redistribution and use of this software other than as permitted under 
  *    this license is void and will automatically terminate your rights under 
  *    this license. 
  *
  * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __LORA_COMMISSIONING_H__
#define __LORA_COMMISSIONING_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Exported types ------------------------------------------------------------*/
/* Exported constants --------------------------------------------------------*/
/* External variables --------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported functions ------------------------------------------------------- */ 
/*!
 * When set to 1 the application uses the Over-the-Air activation procedure
 * When set to 0 the application uses the Personalization activation procedure
 */
#define OVER_THE_AIR_ACTIVATION                     1

/*!
 * Indicates if the end-device is to be connected to a private or public network
 */
#define LORAWAN_PUBLIC_NETWORK                      true

/*!
 * When set to 1 DevEui is LORAWAN_DEVICE_EUI
 * When set to 0 DevEui is automatically generated by calling
 *         BoardGetUniqueId function
 */
#define STATIC_DEVICE_EUI                    1 //0

/*!
 * Mote device IEEE EUI (big endian)
 *
 * \remark see STATIC_DEVICE_EUI comments
 */
//#define LORAWAN_DEVICE_EUI                          { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 }
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x00, 0x00, 0x11, 0x57 } // Device_EUI CooLab Room_1
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0C, 0x01, 0x00, 0x00, 0x11, 0x59 } // Device_EUI CooLab Room_2
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x00, 0x00, 0x11, 0x22 } // Device_EUI CooLab Place Room_3
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x00, 0x00, 0x11, 0x37 } // Device_EUI CooLab outside Room_4
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x00, 0x00, 0x11, 0x99 } // Device_EUI CooLab Room_5
//#define LORAWAN_DEVICE_EUI 													  { 0x00, 0x25, 0x0C, 0x01, 0x00, 0x00, 0x11, 0x58 } // Device_EUI CooLab Room_6
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x22, 0x68 } // Device_EUI CooLab Room_7
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x22, 0x80 } // Device_EUI CooLab Room_8
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x08 } // Device_EUI CooLab Room_9
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x18 } // Device_EUI CooLab Room_10
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x28 } // Device_EUI CooLab Room_11
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x29 } // Device_EUI CooLab Room_12
#define LORAWAN_DEVICE_EUI 														 { 0x00,0x25,0x0C,0x01,0x00,0x00,0x13,0x21 } // Device_EUI CooLab Room_13
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x31 } // Device_EUI CooLab Room_14
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x32 } // Device_EUI CooLab Room_15
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x33 } // Device_EUI CooLab Room_16
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x34 } // Device_EUI CooLab Room_17
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x35 } // Device_EUI CooLab Room_18
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x36 } // Device_EUI CooLab Room_19
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x37 } // Device_EUI CooLab Room_20
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0c, 0x01, 0x11, 0x11, 0x23, 0x38 } // Device_EUI CooLab Room_21
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0C, 0x01, 0x00, 0x00, 0x11, 0x88 } // Device_EUI Wizzilab
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0C, 0x10, 0x01, 0x02, 0x03, 0x57 } // Device_EUI STM32_in_the_sky_test
//#define LORAWAN_DEVICE_EUI 													{ 0x00, 0x25, 0x0C, 0x10, 0x01, 0x02, 0x03, 0x04 } // Device_EUI STM32_balloon_tracker




/*!
 * Application IEEE EUI (big endian)
 */
//#define LORAWAN_APPLICATION_EUI                     { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 }
#define LORAWAN_APPLICATION_EUI                     {0x00,0x25,0x0C,0x00,0x00,0x01,0x00,0x01} // APP_EUI FreeRoom
//#define LORAWAN_APPLICATION_EUI                     {0x70,0xB3,0xD5,0x7E,0xD0,0x01,0x51,0xE6} // APP_EUI STM32_in_the_sky_test
//#define LORAWAN_APPLICATION_EUI                     {0x70,0xB3,0xD5,0x7E,0xD0,0x01,0x4D,0x9E} // APP_EUI STM32_ballon_tracker

/*!
 * AES encryption/decryption cipher application key
 */
//#define LORAWAN_APPLICATION_KEY                     { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }
//#define LORAWAN_APPLICATION_KEY 										{0xae,0x26,0x44,0xb9,0xec,0xc1,0xfc,0x99,0x36,0x35,0xd1,0xa0,0x89,0x58,0x71,0xac} // Device CooLab Room_1
//#define LORAWAN_APPLICATION_KEY 										{0xA4,0x4E,0xEB,0x0E,0xB7,0x0C,0x90,0x77,0x8F,0x90,0x8B,0x19,0xC2,0xCE,0xBE,0x1B} // Device CooLab Room_2
//#define LORAWAN_APPLICATION_KEY 										{0x1d,0x9d,0xa7,0x31,0x09,0x0a,0x3c,0x44,0x11,0x34,0xcd,0xc8,0x60,0x67,0x42,0x66 } // Device CooLab Place Room_3
//#define LORAWAN_APPLICATION_KEY 										{0x33,0x95,0xae,0x9a,0xdd,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xa5,0xae} // Device CooLab outside Room_4
//#define LORAWAN_APPLICATION_KEY 										  {0x4a,0xe4,0xbe,0xe0,0x7b,0xc0,0x09,0x77,0xf8,0x09,0xb8,0x91,0x2c,0xec,0xeb,0xb1} // Device CooLab Room_5
//#define LORAWAN_APPLICATION_KEY 										  {0x4A,0xE4,0xBE,0xE0,0x7B,0xC0,0x09,0x77,0xFF,0x09,0xB8,0x91,0x2C,0xCC,0xEE,0xBB} // Device CooLab Room_6
//#define LORAWAN_APPLICATION_KEY 										  {0x4A,0xE4,0xBE,0xE0,0x7B,0xC0,0x09,0x77,0xF8,0x09,0xB8,0x91,0x1D,0xFD,0xFC,0xC2} // Device Wizzilab
//#define LORAWAN_APPLICATION_KEY 										{0x44,0x06,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xa5,0xae} // Device CooLab Room_7
//#define LORAWAN_APPLICATION_KEY 										{0x44,0x06,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xcd,0xdd} // Device CooLab Room_8
//#define LORAWAN_APPLICATION_KEY 										{0x55,0x06,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xde,0xee} // Device CooLab Room_9
//#define LORAWAN_APPLICATION_KEY 										{0x15,0x16,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xde,0xee} // Device CooLab Room_10
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0xde,0xee} // Device CooLab Room_11
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0x0e,0x0e,0x0e} // Device CooLab Room_12
#define LORAWAN_APPLICATION_KEY 										{0x9A,0x0D,0x71,0x3B,0x90,0x5A,0x93,0xB2,0xB6,0xD0,0x80,0x45,0xD2,0xD7,0x4C,0x10} // Device CooLab Room_13
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xaa,0xaa,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0xf1,0xf1,0xf1} // Device CooLab Room_14
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0xf1,0xf1,0xf1} // Device CooLab Room_15
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xee,0xf2,0xf2,0xf2} // Device CooLab Room_16
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xff,0xf3,0xf3,0xf3} // Device CooLab Room_17
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xff,0xf4,0xf4,0xf4} // Device CooLab Room_18
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xff,0xf5,0xf5,0xf5} // Device CooLab Room_19
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xff,0xf6,0xf6,0xf6} // Device CooLab Room_20
//#define LORAWAN_APPLICATION_KEY 										{0x25,0x26,0xbb,0xbb,0xee,0x1b,0x7c,0x1f,0xd7,0xbf,0xa5,0x4f,0xff,0xf7,0xf7,0xf7} // Device CooLab Room_21
//#define LORAWAN_APPLICATION_KEY 										{0x66,0x06,0xBB,0xBB,0xFF,0x1B,0x7C,0x1F,0xD7,0xBF,0xA5,0x4F,0xFF,0x0E,0xDE,0xFF} // Device STM32_in_the_sky_test
//#define LORAWAN_APPLICATION_KEY 										{0x66,0x06,0xBB,0xBB,0xFF,0x1B,0x7C,0x1F,0xD7,0xBF,0xA5,0x4F,0xFF,0x0E,0xDE,0xAA} // Device STM32_balloo_tracker
#if( OVER_THE_AIR_ACTIVATION == 0 )

/*!
 * Current network ID
 */
#define LORAWAN_NETWORK_ID                          ( uint32_t )0

/*!
 * When set to 1 DevAdd is LORAWAN_DEVICE_ADDRESS
 * When set to 0 DevAdd is automatically generated using
 *         a pseudo random generator seeded with a value derived from
 *         BoardUniqueId value
 */
#define STATIC_DEVICE_ADDRESS                     0
/*!
 * Device address on the network (big endian)
 *
 * \remark see STATIC_DEVICE_ADDRESS comments
 */
#define LORAWAN_DEVICE_ADDRESS                      ( uint32_t )0x0100000a

/*!
 * AES encryption/decryption cipher network session key
 */
#define LORAWAN_NWKSKEY                             { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }

/*!
 * AES encryption/decryption cipher application session key
 */
#define LORAWAN_APPSKEY                             { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }

#endif /* OVER_THE_AIR_ACTIVATION == 0 */


#ifdef __cplusplus
}
#endif

#endif /* __LORA_COMMISSIONING_H__ */
